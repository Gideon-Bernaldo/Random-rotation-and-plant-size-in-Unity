using System;
using System.Collections.Generic;
using UnityEngine;

[Serializable]
public class SettingsNatureObjectMap
{
    public string tagObject = "Tree";
    public int countObjects;
    [Space(5)]
    public List<GameObject> spawnObjects;
    [HideInInspector] public List<GameObject> spawnedObjects = new();
    [Range(1, 4)]
    public float minSizeObject = 1;
    [Range(1, 4)]
    public float maxSizeObject = 1.5f;
}

public class MapEditor : MonoBehaviour
{
    public bool activateRandom;

    [Header("Tree")]
    public SettingsNatureObjectMap Tree;

    private void OnValidate()
    {
        if (activateRandom)
        {            
            SpawnNatureObjects(Tree);            
        }
    }    

    private void SpawnNatureObjects(SettingsNatureObjectMap tree)
    {
        tree.countObjects = 0;
        tree.spawnedObjects.Clear();

        try
        {
            tree.spawnedObjects.AddRange(GameObject.FindGameObjectsWithTag(tree.tagObject));
            tree.countObjects = GameObject.FindGameObjectsWithTag(tree.tagObject).Length;
        }
        catch
        {
            Debug.LogWarning($"Деревья не найдены. Проверь, назначен ли тэг на объекты. Ваш тэг {tree.tagObject}");
        }

        if (tree.spawnedObjects.Count > 0)
        {
            for(int i = 0; i < tree.countObjects; i++)
            {
                tree.spawnedObjects[i].transform.rotation = Quaternion.Euler(UnityEngine.Random.Range(-95, -85), UnityEngine.Random.Range(0,360), UnityEngine.Random.Range(-5, 5));
                float rand_scale = UnityEngine.Random.Range(tree.minSizeObject, tree.maxSizeObject);
                tree.spawnedObjects[i].transform.localScale = new Vector3(rand_scale, rand_scale, rand_scale);
            }
        }
        activateRandom = false;
    }
}
